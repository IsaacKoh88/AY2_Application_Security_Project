# worker_processes    auto;
pid                 /var/run/nginx.pid;
include             /etc/nginx/conf.d/*.conf;

events {
    # Sets maximum number of connections to the reverse proxy to 1024
    worker_connections  1024;
}

http {
    # Logging
    #log_format compression '$remote_addr - $remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $gzip_ratio';
    #log_format sslcompression '$ssl_protocol $ssl_cipher $remote_addr $http_user_agent $remote_addr - $remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $gzip_ratio';

    # Rate limit zone
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;
    limit_req_status 429;

    # Run reverse proxy server on port 80 for unencrypted traffic
    server {
        listen              8080;
        server_name         localhost 127.0.0.1;

        #gzip on;
        #access_log /etc/nginx/logs/nginx-access.log compression;

        # Redirect traffic to port 443 on https
        return 301 https://$server_name$request_uri;
    }

    # Run reverse proxy server on port 443 for TLS/SSL traffic
    server {
        listen              8443 ssl;
        server_name         localhost 127.0.0.1;

        #gzip on;
        #access_log /etc/nginx/logs/nginx-ssl-access.log sslcompression;

        # SSL configurations
        ssl_certificate     /etc/nginx/certs/localhost.crt;
        ssl_certificate_key /etc/nginx/certs/localhost.key;
        ssl_protocols       TLSv1.3;
        ssl_ciphers         "HIGH !aNULL !eNULL !EXPORT !CAMELLIA !DES !MD5 !PSK !RC4";
        ssl_prefer_server_ciphers               on;

        # Retain request header data of actual client
        proxy_set_header    Host                $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwared-Proto    $scheme;

        # Routes
        location / {
            limit_req zone=mylimit burst=20 delay=20;
            proxy_pass          http://next-app:3000;
        }

        location /api/login {
            limit_req zone=mylimit burst=10 nodelay;
            proxy_pass          http://next-app:3000/api/login;
        }
    }
}